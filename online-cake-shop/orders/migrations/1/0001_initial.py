# Generated by Django 5.2 on 2025-04-19 10:11

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('products', '0002_addon'),
        ('users', '0002_address'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1, verbose_name='Quantity')),
                ('price_at_order', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Price at Order')),
                ('cake', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='order_items', to='products.cake', verbose_name='Cake')),
                ('flavor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='order_items', to='products.flavor', verbose_name='Flavor')),
                ('size', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='order_items', to='products.size', verbose_name='Size')),
            ],
            options={
                'verbose_name': 'Order Item',
                'verbose_name_plural': 'Order Items',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delivery_datetime', models.DateTimeField(help_text='Chosen date and start time slot for delivery', verbose_name='Delivery Date/Time')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('total_price', models.DecimalField(decimal_places=2, default=0.0, max_digits=12, verbose_name='Total Price')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('status', models.CharField(choices=[('PENDING', 'Pending Payment'), ('PROCESSING', 'Processing'), ('SHIPPED', 'Shipped'), ('DELIVERED', 'Delivered'), ('CANCELLED', 'Cancelled'), ('FAILED', 'Failed')], default='PENDING', max_length=20, verbose_name='Status')),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='orders', to='users.address', verbose_name='Delivery Address')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orders', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Order',
                'verbose_name_plural': 'Orders',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CustomDesign',
            fields=[
                ('order_item', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='custom_design', serialize=False, to='orders.orderitem', verbose_name='Order Item')),
                ('design_file', models.ImageField(help_text='Image uploaded by customer for custom design', upload_to='custom_designs/', verbose_name='Design File')),
                ('notes', models.TextField(blank=True, help_text='Additional customer notes regarding the custom design', null=True, verbose_name='Notes')),
            ],
            options={
                'verbose_name': 'Custom Design',
                'verbose_name_plural': 'Custom Designs',
            },
        ),
        migrations.AddField(
            model_name='orderitem',
            name='order',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='orders.order', verbose_name='Order'),
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(verbose_name='Message')),
                ('type', models.CharField(choices=[('EMAIL', 'Email'), ('SMS', 'SMS'), ('INAPP', 'In-App')], default='EMAIL', max_length=10, verbose_name='Type')),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('SENT', 'Sent'), ('FAILED', 'Failed')], default='PENDING', max_length=10, verbose_name='Status')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('sent_at', models.DateTimeField(blank=True, null=True, verbose_name='Sent At')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL, verbose_name='User')),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notifications', to='orders.order', verbose_name='Related Order')),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Amount')),
                ('gateway_reference_id', models.CharField(blank=True, db_index=True, max_length=100, null=True, verbose_name='Gateway Reference ID')),
                ('gateway_response', models.TextField(blank=True, null=True, verbose_name='Gateway Response')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('payment_method', models.CharField(blank=True, choices=[('ONLINE', 'Online Gateway'), ('COD', 'Cash on Delivery'), ('TRANSFER', 'Bank Transfer')], max_length=20, null=True, verbose_name='Payment Method')),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('SUCCESS', 'Successful'), ('FAILED', 'Failed')], default='PENDING', max_length=10, verbose_name='Status')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='transactions', to='orders.order', verbose_name='Order')),
            ],
            options={
                'verbose_name': 'Transaction',
                'verbose_name_plural': 'Transactions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrderAddon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1, verbose_name='Quantity')),
                ('price_at_order', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Price at Order')),
                ('addon', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='order_items', to='products.addon', verbose_name='Addon')),
                ('order_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='addons', to='orders.orderitem', verbose_name='Order Item')),
            ],
            options={
                'verbose_name': 'Order Addon',
                'verbose_name_plural': 'Order Addons',
                'ordering': ['order_item'],
                'unique_together': {('order_item', 'addon')},
            },
        ),
    ]
