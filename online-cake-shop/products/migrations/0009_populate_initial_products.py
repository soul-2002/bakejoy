# Generated by Django 5.2 on 2025-08-10 08:09

from django.db import migrations
from django.conf import settings
import json
import os

def populate_data(apps, schema_editor):
    # --- گرفتن تمام مدل‌های لازم ---
    Category = apps.get_model('products', 'Category')
    Flavor = apps.get_model('products', 'Flavor')
    Size = apps.get_model('products', 'Size')
    SupplyType = apps.get_model('products', 'SupplyType')
    Color = apps.get_model('products', 'Color')
    Theme = apps.get_model('products', 'Theme')
    Cake = apps.get_model('products', 'Cake')
    CakeSizeVariant = apps.get_model('products', 'CakeSizeVariant')
    PartySupply = apps.get_model('products', 'PartySupply')

    # --- ۱. وارد کردن داده‌های پایه (دسته‌بندی، طعم و ...) ---
    base_data_files = {
        Category: 'initial_categories.json',
        Flavor: 'initial_flavors.json',
        Size: 'initial_sizes.json',
        SupplyType: 'initial_supply_types.json',
        Color: 'initial_colors.json',
        Theme: 'initial_themes.json',
    }

    for model, filename in base_data_files.items():
        json_path = os.path.join(settings.BASE_DIR, filename)
        with open(json_path, 'r', encoding='utf-8') as f:
            data = json.load(f)
            for item_data in data:
                model.objects.get_or_create(id=item_data['id'], defaults=item_data)
    
    print("Initial base data populated successfully.")

    # --- ۲. حالا وارد کردن کیک‌ها ---
    cakes_json_path = os.path.join(settings.BASE_DIR, 'initial_cakes.json')
    with open(cakes_json_path, 'r', encoding='utf-8') as f:
        cakes_data = json.load(f)
        for cake_data in cakes_data:
            # ... (بقیه کد وارد کردن کیک‌ها بدون تغییر باقی می‌ماند)
            # ... چون حالا دسته‌بندی‌ها و ... از قبل وجود دارند
            category = Category.objects.get(id=cake_data.pop('category_id'))
            flavors = Flavor.objects.filter(id__in=cake_data.pop('available_flavors_ids'))
            size_variants_data = cake_data.pop('size_variants')
            cake, created = Cake.objects.update_or_create(
                slug=cake_data['slug'],
                defaults={**cake_data, 'category': category}
            )
            cake.available_flavors.set(flavors)
            for variant_data in size_variants_data:
                size = Size.objects.get(id=variant_data['size_id'])
                CakeSizeVariant.objects.get_or_create(
                    cake=cake,
                    size=size,
                    defaults={'price_modifier': variant_data.get('price_modifier', 0)}
                )
    print("Initial cakes populated successfully.")

    # --- ۳. و در نهایت وارد کردن لوازم جشن ---
    supplies_json_path = os.path.join(settings.BASE_DIR, 'initial_supplies.json')
    with open(supplies_json_path, 'r', encoding='utf-8') as f:
        # ... (کد وارد کردن لوازم جشن بدون تغییر باقی می‌ماند)
        supplies_data = json.load(f)
        for supply_data in supplies_data:
            supply_type = SupplyType.objects.get(id=supply_data.pop('type_id'))
            colors = Color.objects.filter(id__in=supply_data.pop('colors_ids'))
            themes = Theme.objects.filter(id__in=supply_data.pop('themes_ids'))
            supply, created = PartySupply.objects.update_or_create(
                slug=supply_data['slug'],
                defaults={**supply_data, 'type': supply_type}
            )
            supply.colors.set(colors)
            supply.themes.set(themes)
    print("Initial party supplies populated successfully.")




class Migration(migrations.Migration):

    dependencies = [
        ('products', '0008_color_supplytype_theme_partysupply'),
    ]

    operations = [
         migrations.RunPython(populate_data),
    ]
