# Generated by Django 5.2 on 2025-06-06 20:21

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Addon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='Addon Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('price', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Price')),
                ('stock', models.PositiveIntegerField(blank=True, help_text='Leave blank if stock is not tracked', null=True, verbose_name='Stock')),
                ('category', models.CharField(blank=True, choices=[('DECOR', 'Decorations'), ('CANDLE', 'Candles'), ('CARD', 'Greeting Cards'), ('UTENSIL', 'Utensils'), ('OTHER', 'Other')], max_length=10, null=True, verbose_name='Category')),
                ('image', models.ImageField(blank=True, null=True, upload_to='addons/', verbose_name='Image')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
            ],
            options={
                'verbose_name': 'Addon',
                'verbose_name_plural': 'Addons',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Category Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('slug', models.SlugField(help_text='A URL-friendly version of the category name, usually auto-generated.', max_length=120, unique=True, verbose_name='Slug')),
                ('image', models.ImageField(blank=True, null=True, upload_to='categories/', verbose_name='Image')),
                ('is_active', models.BooleanField(default=True, help_text='Is this category currently active and visible?', verbose_name='Is Active')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Flavor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Flavor Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
            ],
            options={
                'verbose_name': 'Flavor',
                'verbose_name_plural': 'Flavors',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Size',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='e.g., Small, Medium, 8-inch', max_length=50, unique=True, verbose_name='Size Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('estimated_weight_kg', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Estimated Weight (kg)')),
                ('price_modifier', models.DecimalField(decimal_places=2, default=0.0, help_text='مبلغی که به قیمت پایه کیک برای این سایز اضافه یا کم می\u200cشود (می\u200cتواند منفی باشد).', max_digits=10, verbose_name='Price Modifier')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
            ],
            options={
                'verbose_name': 'Size',
                'verbose_name_plural': 'Sizes',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Cake',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Cake Name')),
                ('slug', models.SlugField(help_text='A URL-friendly version of the cake name, auto-generated if left blank.', max_length=255, unique=True, verbose_name='Slug')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('short_description', models.CharField(blank=True, max_length=300, null=True, verbose_name='Short Description')),
                ('image', models.ImageField(blank=True, null=True, upload_to='cakes/', verbose_name='Image')),
                ('base_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Base Price')),
                ('price_type', models.CharField(choices=[('FIXED', 'Fixed Price'), ('PER_KG', 'Price Per Kg')], default='FIXED', max_length=10, verbose_name='Price Type')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('average_rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3, verbose_name='Average Rating')),
                ('review_count', models.PositiveIntegerField(default=0, verbose_name='Review Count')),
                ('is_featured', models.BooleanField(default=False, help_text='Show this cake in featured sections?', verbose_name='Is Featured')),
                ('ingredients_text', models.TextField(blank=True, null=True, verbose_name='Ingredients Text')),
                ('nutrition_info_text', models.TextField(blank=True, null=True, verbose_name='Nutrition Info Text')),
                ('allergen_info_text', models.TextField(blank=True, null=True, verbose_name='Allergen Info Text')),
                ('sale_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Sale Price')),
                ('schedule_sale_enabled', models.BooleanField(default=False, verbose_name='Schedule Sale Enabled')),
                ('sale_start_date', models.DateTimeField(blank=True, null=True, verbose_name='Sale Start Date')),
                ('sale_end_date', models.DateTimeField(blank=True, null=True, verbose_name='Sale End Date')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cakes', to='products.category', verbose_name='Category')),
                ('available_flavors', models.ManyToManyField(blank=True, related_name='cakes', to='products.flavor', verbose_name='Available Flavors')),
            ],
            options={
                'verbose_name': 'Cake',
                'verbose_name_plural': 'Cakes',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='cakes/gallery/', verbose_name='Image')),
                ('alt_text', models.CharField(blank=True, max_length=255, null=True, verbose_name='Alt Text')),
                ('cake', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='products.cake', verbose_name='Cake')),
            ],
            options={
                'verbose_name': 'Product Image',
                'verbose_name_plural': 'Product Images',
                'ordering': ['cake', 'id'],
            },
        ),
        migrations.CreateModel(
            name='CakeSizeVariant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price_modifier', models.DecimalField(decimal_places=2, default=0.0, help_text='مبلغی که به قیمت پایه کیک برای این ترکیب اندازه اضافه یا از آن کم می\u200cشود.', max_digits=10, verbose_name='Price Modifier for this Variant')),
                ('estimated_weight_kg_override', models.DecimalField(blank=True, decimal_places=2, help_text='وزن دقیق این محصول با این اندازه، اگر با وزن پیش\u200cفرض اندازه متفاوت است.', max_digits=5, null=True, verbose_name='Specific Weight for this Variant (kg)')),
                ('sku_variant', models.CharField(blank=True, max_length=50, null=True, verbose_name='SKU for Variant')),
                ('stock_quantity', models.PositiveIntegerField(blank=True, null=True, verbose_name='Stock Quantity for Variant')),
                ('is_active_for_product', models.BooleanField(default=True, verbose_name='Is this variant active for product')),
                ('cake', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='size_variants_through', to='products.cake')),
                ('size', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cake_variants_through', to='products.size')),
            ],
            options={
                'verbose_name': 'Cake Size Variant',
                'verbose_name_plural': 'Cake Size Variants',
                'unique_together': {('cake', 'size')},
            },
        ),
        migrations.AddField(
            model_name='cake',
            name='available_sizes',
            field=models.ManyToManyField(blank=True, related_name='cakes', through='products.CakeSizeVariant', to='products.size'),
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveSmallIntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], verbose_name='Rating')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Comment')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='products.cake', verbose_name='Product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Review',
                'verbose_name_plural': 'Reviews',
                'ordering': ['-created_at'],
                'unique_together': {('product', 'user')},
            },
        ),
    ]
